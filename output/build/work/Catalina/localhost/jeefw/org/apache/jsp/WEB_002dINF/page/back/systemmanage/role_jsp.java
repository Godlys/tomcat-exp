/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/@VERSION@
 * Generated at: 2017-10-17 14:38:03 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.page.back.systemmanage;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class role_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(4);
    _jspx_dependants.put("jar:file:/project/eclipseWS/jeefw/WebContent/WEB-INF/lib/shiro-all-1.2.4.jar!/META-INF/shiro.tld", Long.valueOf(1436274684000L));
    _jspx_dependants.put("/WEB-INF/lib/shiro-all-1.2.4.jar", Long.valueOf(1456748232000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-impl-1.2.2.jar", Long.valueOf(1426168660000L));
    _jspx_dependants.put("jar:file:/project/eclipseWS/jeefw/WebContent/WEB-INF/lib/jstl-impl-1.2.2.jar!/META-INF/c.tld", Long.valueOf(1343791018000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fshiro_005fhasPermission_0026_005fname;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fshiro_005flacksPermission_0026_005fname;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fshiro_005fhasPermission_0026_005fname = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fshiro_005flacksPermission_0026_005fname = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.release();
    _005fjspx_005ftagPool_005fshiro_005fhasPermission_0026_005fname.release();
    _005fjspx_005ftagPool_005fshiro_005flacksPermission_0026_005fname.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      if (_jspx_meth_c_005fset_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\r\n");
      out.write("<link rel=\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/static/assets/css/jquery-ui.css\" />\r\n");
      out.write("<link rel=\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/static/assets/css/ui.jqgrid.css\" />\r\n");
      out.write("<link rel=\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/static/assets/css/jquery.gritter.css\" />\r\n");
      out.write("\r\n");
      out.write("<div class=\"row\">\r\n");
      out.write("\t<div class=\"col-xs-12\">\r\n");
      out.write("\t\t<table id=\"grid-table\"></table>\r\n");
      out.write("\r\n");
      out.write("\t\t<div id=\"grid-pager\"></div>\r\n");
      out.write("\r\n");
      out.write("\t\t<script type=\"text/javascript\">\r\n");
      out.write("\t\t\tvar $path_base = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/static\";//in Ace demo this will be used for editurl parameter\r\n");
      out.write("\t\t</script>\r\n");
      out.write("\r\n");
      out.write("\t\t<!-- PAGE CONTENT ENDS -->\r\n");
      out.write("\t</div><!-- /.col -->\r\n");
      out.write("</div><!-- /.row -->\r\n");
      out.write("\r\n");
      out.write("<div id=\"modal-table\" class=\"modal fade\" tabindex=\"-1\" data-backdrop=\"static\">\r\n");
      out.write("\t<div class=\"modal-dialog\">\r\n");
      out.write("\t\t<form id=\"informationForm\">\r\n");
      out.write("\t\t\t<div class=\"modal-content\">\r\n");
      out.write("\t\t\t\t<div class=\"modal-header no-padding\">\r\n");
      out.write("\t\t\t\t\t<div class=\"table-header\">\r\n");
      out.write("\t\t\t\t\t\t<button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\">\r\n");
      out.write("\t\t\t\t\t\t\t<span class=\"white\">&times;</span>\r\n");
      out.write("\t\t\t\t\t\t</button>\r\n");
      out.write("\t\t\t\t\t\t角色授权\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"modal-body\" style=\"max-height: 450px;overflow-y: scroll;\">\r\n");
      out.write("\t\t\t\t\t<div id=\"modal-tip\" class=\"red clearfix\"></div>\r\n");
      out.write("\t\t\t\t\t<input id=\"roleKeyId\" type=\"hidden\" />\r\n");
      out.write("\t\t\t\t\t<div class=\"widget-box widget-color-blue2\">\r\n");
      out.write("\t\t\t\t\t\t<div class=\"widget-body\">\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"widget-main padding-8\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<ul id=\"authorityTree\"></ul>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"modal-footer no-margin-top\">\r\n");
      out.write("\t\t\t\t\t<div class=\"text-center\">\r\n");
      out.write("\t\t\t\t\t\t<button id=\"submitButton\" type=\"submit\" class=\"btn btn-app btn-success btn-xs\">\r\n");
      out.write("\t\t\t\t\t\t\t<i class=\"ace-icon fa fa-floppy-o bigger-160\"></i>\r\n");
      out.write("\t\t\t\t\t\t\t保存\r\n");
      out.write("\t\t\t\t\t\t</button>\r\n");
      out.write("\t\t\t\t\t\t<button class=\"btn btn-app btn-pink btn-xs\" data-dismiss=\"modal\">\r\n");
      out.write("\t\t\t\t\t\t\t<i class=\"ace-icon fa fa-share bigger-160\"></i>\r\n");
      out.write("\t\t\t\t\t\t\t取消\r\n");
      out.write("\t\t\t\t\t\t</button>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div><!-- /.modal-content -->\r\n");
      out.write("\t\t</form>\r\n");
      out.write("\t</div><!-- /.modal-dialog -->\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<!-- page specific plugin scripts -->\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\t\tvar scripts = [ null, \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/static/assets/js/jqGrid/jquery.jqGrid.js\", \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/static/assets/js/jqGrid/i18n/grid.locale-cn.js\", \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/static/assets/js/fuelux/fuelux.tree.js\", \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/static/assets/js/jquery.gritter.js\", null ]\r\n");
      out.write("        $('.page-content-area').ace_ajax('loadScripts', scripts, function() {\r\n");
      out.write("        \t// inline scripts related to this page\r\n");
      out.write("        \tjQuery(function($) {\r\n");
      out.write("        \t\tvar grid_selector = \"#grid-table\";\r\n");
      out.write("        \t\tvar pager_selector = \"#grid-pager\";\r\n");
      out.write("\r\n");
      out.write("        \t\t// resize to fit page size\r\n");
      out.write("        \t\t$(window).on('resize.jqGrid', function() {\r\n");
      out.write("        \t\t\t$(grid_selector).jqGrid('setGridWidth', $(\".page-content\").width());\r\n");
      out.write("        \t\t})\r\n");
      out.write("        \t\t// resize on sidebar collapse/expand\r\n");
      out.write("        \t\tvar parent_column = $(grid_selector).closest('[class*=\"col-\"]');\r\n");
      out.write("        \t\t$(document).on('settings.ace.jqGrid', function(ev, event_name, collapsed) {\r\n");
      out.write("        \t\t\tif (event_name === 'sidebar_collapsed' || event_name === 'main_container_fixed') {\r\n");
      out.write("        \t\t\t\t// setTimeout is for webkit only to give time for DOM changes and then redraw!!!\r\n");
      out.write("        \t\t\t\tsetTimeout(function() {\r\n");
      out.write("        \t\t\t\t\t$(grid_selector).jqGrid('setGridWidth', parent_column.width());\r\n");
      out.write("        \t\t\t\t}, 0);\r\n");
      out.write("        \t\t\t}\r\n");
      out.write("        \t\t})\r\n");
      out.write("\r\n");
      out.write("        \t\tjQuery(grid_selector).jqGrid({\r\n");
      out.write("        \t\t\tsubGrid : false,\r\n");
      out.write("        \t\t\turl : \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/sys/role/getRole\",\r\n");
      out.write("        \t\t\tdatatype : \"json\",\r\n");
      out.write("        \t\t\theight : 450,\r\n");
      out.write("        \t\t\tcolNames : ['', 'ID', '角色编码', '角色名称', '角色描述', '授权'],\r\n");
      out.write("        \t\t\tcolModel : [ {\r\n");
      out.write("        \t\t\t\tname : '',\r\n");
      out.write("        \t\t\t\tindex : '',\r\n");
      out.write("        \t\t\t\twidth : 80,\r\n");
      out.write("        \t\t\t\tfixed : true,\r\n");
      out.write("        \t\t\t\tsortable : false,\r\n");
      out.write("        \t\t\t\tresize : false,\r\n");
      out.write("        \t\t\t\tformatter : 'actions',\r\n");
      out.write("        \t\t\t\tformatoptions : {\r\n");
      out.write("        \t\t\t\t\tkeys : true,\r\n");
      out.write("        \t\t\t\t\t//delbutton : false,//disable delete button\r\n");
      out.write("        \t\t\t\t\tdelOptions : {\r\n");
      out.write("        \t\t\t\t\t\trecreateForm : true,\r\n");
      out.write("        \t\t\t\t\t\tbeforeShowForm : beforeDeleteCallback\r\n");
      out.write("        \t\t\t\t\t}\r\n");
      out.write("        \t\t\t\t\t//editformbutton:true, editOptions:{recreateForm:true, beforeShowForm:beforeEditCallback}\r\n");
      out.write("        \t\t\t\t}\r\n");
      out.write("        \t\t\t}, {\r\n");
      out.write("        \t\t\t\tname : 'id',\r\n");
      out.write("        \t\t\t\tindex : 'id',\r\n");
      out.write("        \t\t\t\tlabel : 'ID',\r\n");
      out.write("        \t\t\t\twidth : 60,\r\n");
      out.write("        \t\t\t\tsorttype : \"long\",\r\n");
      out.write("        \t\t\t\tsearch : false\r\n");
      out.write("        \t\t\t}, {\r\n");
      out.write("        \t\t\t\tname : 'roleKey',\r\n");
      out.write("        \t\t\t\tindex : 'roleKey',\r\n");
      out.write("        \t\t\t\tlabel : '角色编码',\r\n");
      out.write("        \t\t\t\twidth : 120,\r\n");
      out.write("        \t\t\t\teditable : true,\r\n");
      out.write("        \t\t\t\teditoptions : {size : \"20\", maxlength : \"40\"},\r\n");
      out.write("        \t\t\t\tsearchoptions : {sopt : ['eq']},\r\n");
      out.write("        \t\t\t\teditrules : {required : true}\r\n");
      out.write("        \t\t\t}, {\r\n");
      out.write("        \t\t\t\tname : 'roleValue',\r\n");
      out.write("        \t\t\t\tindex : 'roleValue',\r\n");
      out.write("        \t\t\t\tlabel : '角色名称',\r\n");
      out.write("        \t\t\t\twidth : 160,\r\n");
      out.write("        \t\t\t\teditable : true,\r\n");
      out.write("        \t\t\t\teditoptions : {size : \"20\", maxlength : \"40\"},\r\n");
      out.write("        \t\t\t\tsearchoptions : {sopt : ['cn']},\r\n");
      out.write("        \t\t\t\teditrules : {required : true}\r\n");
      out.write("        \t\t\t}, {\r\n");
      out.write("        \t\t\t\tname : 'description',\r\n");
      out.write("        \t\t\t\tindex : 'description',\r\n");
      out.write("        \t\t\t\tlabel : '角色描述',\r\n");
      out.write("        \t\t\t\twidth : 200,\r\n");
      out.write("        \t\t\t\teditable : true,\r\n");
      out.write("        \t\t\t\tsearch : false,\r\n");
      out.write("        \t\t\t\tedittype : 'textarea', \r\n");
      out.write("        \t\t\t\teditoptions : {rows : \"2\", cols : \"18\", maxlength : \"200\"}\r\n");
      out.write("        \t\t\t}, {\r\n");
      out.write("        \t\t\t\tname : '',\r\n");
      out.write("        \t\t\t\tindex : '',\r\n");
      out.write("        \t\t\t\tlabel : '授权',\r\n");
      out.write("        \t\t\t\twidth : 60,\r\n");
      out.write("        \t\t\t\teditable : false,\r\n");
      out.write("        \t\t\t\tsearch : false,\r\n");
      out.write("        \t\t\t\tsortable : false,\r\n");
      out.write("        \t\t\t\tformatter : authorityFormatter\r\n");
      out.write("        \t\t\t} ],\r\n");
      out.write("        \t\t\t//scroll : 1, // set the scroll property to 1 to enable paging with scrollbar - virtual loading of records\r\n");
      out.write("        \t\t\tsortname : \"id\",\r\n");
      out.write("        \t\t\tsortorder : \"asc\",\r\n");
      out.write("        \t\t\tviewrecords : true,\r\n");
      out.write("        \t\t\trowNum : 10,\r\n");
      out.write("        \t\t\trowList : [ 10, 20, 30 ],\r\n");
      out.write("        \t\t\tpager : pager_selector,\r\n");
      out.write("        \t\t\taltRows : true,\r\n");
      out.write("        \t\t\t//toppager : true,\r\n");
      out.write("        \t\t\tmultiselect : true,\r\n");
      out.write("        \t\t\t//multikey : \"ctrlKey\",\r\n");
      out.write("        \t        multiboxonly : true,\r\n");
      out.write("        \t\t\tloadComplete : function() {\r\n");
      out.write("        \t\t\t\tvar table = this;\r\n");
      out.write("        \t\t\t\tsetTimeout(function(){\r\n");
      out.write("        \t\t\t\t\tstyleCheckbox(table);\r\n");
      out.write("        \t\t\t\t\tupdateActionIcons(table);\r\n");
      out.write("        \t\t\t\t\tupdatePagerIcons(table);\r\n");
      out.write("        \t\t\t\t\tenableTooltips(table);\r\n");
      out.write("        \t\t\t\t}, 0);\r\n");
      out.write("        \t\t\t},\r\n");
      out.write("        \t\t\tediturl : \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/sys/role/operateRole\"\r\n");
      out.write("        \t\t\t//caption : \"用户管理列表\",\r\n");
      out.write("        \t\t\t//autowidth : true,\r\n");
      out.write("        \t\t\t/**\r\n");
      out.write("        \t\t\tgrouping : true, \r\n");
      out.write("        \t\t\tgroupingView : { \r\n");
      out.write("        \t\t\t\t groupField : ['name'],\r\n");
      out.write("        \t\t\t\t groupDataSorted : true,\r\n");
      out.write("        \t\t\t\t plusicon : 'fa fa-chevron-down bigger-110',\r\n");
      out.write("        \t\t\t\t minusicon : 'fa fa-chevron-up bigger-110'\r\n");
      out.write("        \t\t\t},\r\n");
      out.write("        \t\t\t*/\r\n");
      out.write("        \t\t});\r\n");
      out.write("        \t\t\r\n");
      out.write("        \t\t$(window).triggerHandler('resize.jqGrid');// trigger window resize to make the grid get the correct size\r\n");
      out.write("        \t\t\r\n");
      out.write("        \t\t// enable search/filter toolbar\r\n");
      out.write("        \t\t// jQuery(grid_selector).jqGrid('filterToolbar',{defaultSearch:true,stringResult:true})\r\n");
      out.write("        \t\t// jQuery(grid_selector).filterToolbar({});\r\n");
      out.write("        \t\t// switch element when editing inline\r\n");
      out.write("        \t\tfunction aceSwitch(cellvalue, options, cell) {\r\n");
      out.write("        \t\t\tsetTimeout(function() {\r\n");
      out.write("        \t\t\t\t$(cell).find('input[type=checkbox]').addClass('ace ace-switch ace-switch-5').after('<span class=\"lbl\"></span>');\r\n");
      out.write("        \t\t\t}, 0);\r\n");
      out.write("        \t\t}\r\n");
      out.write("        \t\t\r\n");
      out.write("        \t\tfunction authorityFormatter(cellvalue, options, cell) {\r\n");
      out.write("        \t\t\tvar template = \"<button data-toggle='modal' onclick='javascript:$(\\\"#modal-table\\\").modal(\\\"toggle\\\");$(\\\"#roleKeyId\\\").val(\\\"\" + cell.roleKey +\"\\\")' class='btn btn-xs btn-warning'><i class='ace-icon fa fa-flag bigger-120'></i></button>\";\r\n");
      out.write("        \t\t\treturn template;\r\n");
      out.write("        \t\t}\r\n");
      out.write("        \t\t\r\n");
      out.write("        \t\tvar treeflag = 0;\r\n");
      out.write("        \t\t$(\"#modal-table\").on('shown.bs.modal', function() {\r\n");
      out.write("        \t\t\tvar remoteDateSource = function(options, callback) {\r\n");
      out.write("            \t\t\tvar parent_id = null;\r\n");
      out.write("            \t\t\tif (!('text' in options || 'type' in options)) {\r\n");
      out.write("            \t\t\t\tparent_id = 0;// load first level data\r\n");
      out.write("            \t\t\t} else if ('type' in options && options['type'] == 'folder') {// it has children\r\n");
      out.write("            \t\t\t\tif ('additionalParameters' in options && 'children' in options.additionalParameters)\r\n");
      out.write("            \t\t\t\t\tparent_id = options.additionalParameters['id'];\r\n");
      out.write("            \t\t\t}\r\n");
      out.write("            \t\t\tif (parent_id !== null) {\r\n");
      out.write("            \t\t\t\t$.ajax({\r\n");
      out.write("            \t\t\t\t\turl : \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/sys/authority/getAuthorityTreeList?rand=\" + Math.random(1000),\r\n");
      out.write("            \t\t\t\t\tdata : {\r\n");
      out.write("            \t\t\t\t\t\tid : parent_id,\r\n");
      out.write("            \t\t\t\t\t\troleKey : $(\"#roleKeyId\").val()\r\n");
      out.write("            \t\t\t\t\t},\r\n");
      out.write("            \t\t\t\t\ttype : 'POST',\r\n");
      out.write("            \t\t\t\t\tdataType : 'json',\r\n");
      out.write("            \t\t\t\t\tcomplete : function(response) {\r\n");
      out.write("            \t\t\t\t\t\tvar returninfo = eval(\"(\" + response.responseText + \")\");\r\n");
      out.write("            \t\t\t\t\t\tif (returninfo.status == \"OK\") {\r\n");
      out.write("            \t\t\t\t\t\t\tcallback({\r\n");
      out.write("            \t\t\t\t\t\t\t\tdata : returninfo.data\r\n");
      out.write("            \t\t\t\t\t\t\t});\r\n");
      out.write("            \t\t\t\t\t\t}\r\n");
      out.write("            \t\t\t\t\t}\r\n");
      out.write("            \t\t\t\t});\r\n");
      out.write("            \t\t\t}\r\n");
      out.write("            \t\t};\r\n");
      out.write("            \t\t$('#authorityTree').ace_tree({\r\n");
      out.write("            \t\t\tdataSource : remoteDateSource,\r\n");
      out.write("            \t\t\tmultiSelect : true,\r\n");
      out.write("            \t\t\tloadingHTML : '<div class=\"tree-loading\"><i class=\"ace-icon fa fa-refresh fa-spin blue\"></i></div>',\r\n");
      out.write("            \t\t\t'open-icon' : 'ace-icon fa fa-check',\r\n");
      out.write("            \t\t\t'close-icon' : 'ace-icon fa fa-times',\r\n");
      out.write("            \t\t\t'selectable' : true,\r\n");
      out.write("            \t\t\t'selected-icon' : 'ace-icon fa fa-check',\r\n");
      out.write("            \t\t\t'unselected-icon' : 'ace-icon fa fa-times',\r\n");
      out.write("            \t\t\tcacheItems : false,\r\n");
      out.write("            \t\t\tfolderSelect : true\r\n");
      out.write("            \t\t});\r\n");
      out.write("            \t\t//$('#authorityTree').ace_tree('discloseAll');\r\n");
      out.write("        \t\t    if(treeflag > 0){\r\n");
      out.write("        \t\t    \t$('#authorityTree').tree('render');\r\n");
      out.write("        \t\t    }\r\n");
      out.write("        \t\t    treeflag++;\r\n");
      out.write("        \t\t    /**\r\n");
      out.write("        \t\t    $('#authorityTree').one('loaded.fu.tree', function (event, data) {\r\n");
      out.write("        \t\t    \t$('#authorityTree').data('ignore-disclosures-limit', true);\r\n");
      out.write("        \t\t    \t$('#authorityTree').tree('discloseAll');\r\n");
      out.write("       \t\t    \t})\r\n");
      out.write("       \t\t    \t**/\r\n");
      out.write("        \t\t});\r\n");
      out.write("        \t\t$('#submitButton').on('click', function() {\r\n");
      out.write("\t\t\t\t\tvar output = '';\r\n");
      out.write("\t\t\t\t\tvar items = $('#authorityTree').tree('selectedItems');\r\n");
      out.write("\t\t\t\t\tfor(var i in items) if (items.hasOwnProperty(i)) {\r\n");
      out.write("\t\t\t\t\t\tvar item = items[i];\r\n");
      out.write("\t\t\t\t\t\toutput += item.additionalParameters['id'] + \",\";\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\tif(output == ''){\r\n");
      out.write("        \t\t\t\t$.gritter.add({\r\n");
      out.write("    \t\t                title: \"系统信息\",\r\n");
      out.write("    \t\t                text: \"请展开树勾选菜单\",\r\n");
      out.write("    \t\t                class_name: \"gritter-info gritter-center\"\r\n");
      out.write("    \t\t            });  \r\n");
      out.write("\t        \t\t\treturn;\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\tconsole.log(output);\r\n");
      out.write("\t\t\t\t\t$.ajax({\r\n");
      out.write("    \t\t\t\t\turl : \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/sys/roleauthority/saveRoleAuthority\",\r\n");
      out.write("    \t\t\t\t\tdata : {\r\n");
      out.write("    \t\t\t\t\t\troleKey : $(\"#roleKeyId\").val(),\r\n");
      out.write("    \t\t\t\t\t\tmenuCode : output\r\n");
      out.write("    \t\t\t\t\t},\r\n");
      out.write("    \t\t\t\t\ttype : 'POST',\r\n");
      out.write("    \t\t\t\t\tdataType : 'json',\r\n");
      out.write("    \t\t\t\t\tcomplete : function(response) {\r\n");
      out.write("    \t\t\t\t\t\t$(\"#modal-table\").modal(\"toggle\");\r\n");
      out.write("    \t\t\t\t\t}\r\n");
      out.write("    \t\t\t\t});\r\n");
      out.write("\t\t\t\t\t//$('#authorityTree').tree('destroy');\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("        \t\t\r\n");
      out.write("        \t\t// navButtons\r\n");
      out.write("        \t\tjQuery(grid_selector).jqGrid('navGrid', pager_selector, { // navbar options\r\n");
      out.write("        \t\t\tedit : ");
      if (_jspx_meth_shiro_005fhasPermission_005f0(_jspx_page_context))
        return;
      if (_jspx_meth_shiro_005flacksPermission_005f0(_jspx_page_context))
        return;
      out.write(",\r\n");
      out.write("        \t\t\tediticon : 'ace-icon fa fa-pencil blue',\r\n");
      out.write("        \t\t\tadd : ");
      if (_jspx_meth_shiro_005fhasPermission_005f1(_jspx_page_context))
        return;
      if (_jspx_meth_shiro_005flacksPermission_005f1(_jspx_page_context))
        return;
      out.write(",\r\n");
      out.write("        \t\t\taddicon : 'ace-icon fa fa-plus-circle purple',\r\n");
      out.write("        \t\t\tdel : ");
      if (_jspx_meth_shiro_005fhasPermission_005f2(_jspx_page_context))
        return;
      if (_jspx_meth_shiro_005flacksPermission_005f2(_jspx_page_context))
        return;
      out.write(",\r\n");
      out.write("        \t\t\tdelicon : 'ace-icon fa fa-trash-o red',\r\n");
      out.write("        \t\t\tsearch : ");
      if (_jspx_meth_shiro_005fhasPermission_005f3(_jspx_page_context))
        return;
      if (_jspx_meth_shiro_005flacksPermission_005f3(_jspx_page_context))
        return;
      out.write(",\r\n");
      out.write("        \t\t\tsearchicon : 'ace-icon fa fa-search orange',\r\n");
      out.write("        \t\t\trefresh : true,\r\n");
      out.write("        \t\t\trefreshicon : 'ace-icon fa fa-refresh blue',\r\n");
      out.write("        \t\t\tview : ");
      if (_jspx_meth_shiro_005fhasPermission_005f4(_jspx_page_context))
        return;
      if (_jspx_meth_shiro_005flacksPermission_005f4(_jspx_page_context))
        return;
      out.write(",\r\n");
      out.write("        \t\t\tviewicon : 'ace-icon fa fa-search-plus grey'\r\n");
      out.write("        \t\t}, {\r\n");
      out.write("        \t\t\t// edit record form\r\n");
      out.write("        \t\t\t// closeAfterEdit: true,\r\n");
      out.write("        \t\t\t// width: 700,\r\n");
      out.write("        \t\t\trecreateForm : true,\r\n");
      out.write("        \t\t\tbeforeShowForm : function(e) {\r\n");
      out.write("        \t\t\t\tvar form = $(e[0]);\r\n");
      out.write("        \t\t\t\tform.closest('.ui-jqdialog').find('.ui-jqdialog-titlebar').wrapInner('<div class=\"widget-header\" />')\r\n");
      out.write("        \t\t\t\tstyle_edit_form(form);\r\n");
      out.write("        \t\t\t},\r\n");
      out.write("    \t\t\t\terrorTextFormat: function (response) {\r\n");
      out.write("    \t\t\t\t\tvar result = eval('('+response.responseText+')');\r\n");
      out.write("    \t\t\t\t    return result.message;\r\n");
      out.write("    \t\t\t\t}\r\n");
      out.write("        \t\t}, {\r\n");
      out.write("        \t\t\t// new record form\r\n");
      out.write("        \t\t\t// width: 700,\r\n");
      out.write("        \t\t\tcloseAfterAdd : true,\r\n");
      out.write("        \t\t\trecreateForm : true,\r\n");
      out.write("        \t\t\tviewPagerButtons : false,\r\n");
      out.write("        \t\t\tbeforeShowForm : function(e) {\r\n");
      out.write("        \t\t\t\tvar form = $(e[0]);\r\n");
      out.write("        \t\t\t\tform.closest('.ui-jqdialog').find('.ui-jqdialog-titlebar').wrapInner('<div class=\"widget-header\" />')\r\n");
      out.write("        \t\t\t\tstyle_edit_form(form);\r\n");
      out.write("        \t\t\t},\r\n");
      out.write("    \t\t\t\terrorTextFormat: function (response) {\r\n");
      out.write("    \t\t\t\t\tvar result = eval('('+response.responseText+')');\r\n");
      out.write("    \t\t\t\t    return result.message;\r\n");
      out.write("    \t\t\t\t}\r\n");
      out.write("        \t\t}, {\r\n");
      out.write("        \t\t\t// delete record form\r\n");
      out.write("        \t\t\trecreateForm : true,\r\n");
      out.write("        \t\t\tbeforeShowForm : function(e) {\r\n");
      out.write("        \t\t\t\tvar form = $(e[0]);\r\n");
      out.write("        \t\t\t\tif (form.data('styled'))\r\n");
      out.write("        \t\t\t\t\treturn false;\r\n");
      out.write("        \t\t\t\tform.closest('.ui-jqdialog').find('.ui-jqdialog-titlebar').wrapInner('<div class=\"widget-header\" />')\r\n");
      out.write("        \t\t\t\tstyle_delete_form(form);\r\n");
      out.write("        \t\t\t\tform.data('styled', true);\r\n");
      out.write("        \t\t\t},\r\n");
      out.write("        \t\t\tonClick : function(e) {\r\n");
      out.write("        \t\t\t\t// alert(1);\r\n");
      out.write("        \t\t\t}\r\n");
      out.write("        \t\t}, {\r\n");
      out.write("        \t\t\t// search form\r\n");
      out.write("        \t\t\trecreateForm : true,\r\n");
      out.write("        \t\t\tafterShowSearch : function(e) {\r\n");
      out.write("        \t\t\t\tvar form = $(e[0]);\r\n");
      out.write("        \t\t\t\tform.closest('.ui-jqdialog').find('.ui-jqdialog-title').wrap('<div class=\"widget-header\" />')\r\n");
      out.write("        \t\t\t\tstyle_search_form(form);\r\n");
      out.write("        \t\t\t},\r\n");
      out.write("        \t\t\tafterRedraw : function() {\r\n");
      out.write("        \t\t\t\tstyle_search_filters($(this));\r\n");
      out.write("        \t\t\t},\r\n");
      out.write("        \t\t\tmultipleSearch : true \r\n");
      out.write("\t        \t\t/**\r\n");
      out.write("\t        \t\t * multipleGroup:true, showQuery: true\r\n");
      out.write("\t        \t\t */\r\n");
      out.write("        \t\t}, {\r\n");
      out.write("        \t\t\t// view record form\r\n");
      out.write("        \t\t\trecreateForm : true,\r\n");
      out.write("        \t\t\tbeforeShowForm : function(e) {\r\n");
      out.write("        \t\t\t\tvar form = $(e[0]);\r\n");
      out.write("        \t\t\t\tform.closest('.ui-jqdialog').find('.ui-jqdialog-title').wrap('<div class=\"widget-header\" />')\r\n");
      out.write("        \t\t\t}\r\n");
      out.write("        \t\t})\r\n");
      out.write("        \t\t\r\n");
      out.write("        \t\t// add custom button to export the data to excel\r\n");
      out.write("        \t\tif(");
      if (_jspx_meth_shiro_005fhasPermission_005f5(_jspx_page_context))
        return;
      if (_jspx_meth_shiro_005flacksPermission_005f5(_jspx_page_context))
        return;
      out.write("){\r\n");
      out.write("    \t\t\t\tjQuery(grid_selector).jqGrid('navButtonAdd', pager_selector,{\r\n");
      out.write("   \t\t\t\t\t   caption : \"\",\r\n");
      out.write("   \t\t\t\t       title : \"导出Excel\",\r\n");
      out.write("   \t\t\t\t       buttonicon : \"ace-icon fa fa-file-excel-o green\", \r\n");
      out.write("   \t\t\t\t       onClickButton : function () { \r\n");
      out.write("   \t\t\t\t    \t   var keys = [], ii = 0, rows = \"\";\r\n");
      out.write("   \t\t\t\t    \t   var ids = $(grid_selector).getDataIDs(); // Get All IDs\r\n");
      out.write("   \t\t\t\t    \t   var row = $(grid_selector).getRowData(ids[0]); // Get First row to get the labels\r\n");
      out.write("   \t\t\t\t    \t   //var label = $(grid_selector).jqGrid('getGridParam','colNames');\r\n");
      out.write("   \t   \t\t\t    \t   for (var k in row) {\r\n");
      out.write("   \t\t\t\t    \t   \t   keys[ii++] = k; // capture col names\r\n");
      out.write("   \t\t\t\t    \t   \t   rows = rows + k + \"\\t\"; // output each Column as tab delimited\r\n");
      out.write("   \t\t\t\t    \t   }\r\n");
      out.write("   \t\t\t\t    \t   rows = rows + \"\\n\"; // Output header with end of line\r\n");
      out.write("   \t\t\t\t    \t   for (i = 0; i < ids.length; i++) {\r\n");
      out.write("   \t\t\t\t    \t   \t   row = $(grid_selector).getRowData(ids[i]); // get each row\r\n");
      out.write("   \t\t\t\t    \t   \t   for (j = 0; j < keys.length; j++)\r\n");
      out.write("   \t\t\t\t    \t   \t\t   rows = rows + row[keys[j]] + \"\\t\"; // output each Row as tab delimited\r\n");
      out.write("   \t\t\t\t    \t   \t   rows = rows + \"\\n\"; // output each row with end of line\r\n");
      out.write("   \t\t\t\t    \t   }\r\n");
      out.write("   \t\t\t\t    \t   rows = rows + \"\\n\"; // end of line at the end\r\n");
      out.write("   \t\t\t\t    \t   var form = \"<form name='csvexportform' action='");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/sys/role/operateRole?oper=excel' method='post'>\";\r\n");
      out.write("   \t\t\t\t    \t   form = form + \"<input type='hidden' name='csvBuffer' value='\" + encodeURIComponent(rows) + \"'>\";\r\n");
      out.write("   \t\t\t\t    \t   form = form + \"</form><script>document.csvexportform.submit();</sc\" + \"ript>\";\r\n");
      out.write("   \t\t\t\t    \t   OpenWindow = window.open('', '');\r\n");
      out.write("   \t\t\t\t    \t   OpenWindow.document.write(form);\r\n");
      out.write("   \t\t\t\t    \t   OpenWindow.document.close();\r\n");
      out.write("   \t\t\t\t       } \r\n");
      out.write("   \t\t\t\t\t});        \t\t\t\r\n");
      out.write("        \t\t}\r\n");
      out.write("        \t\t\r\n");
      out.write("        \t\tfunction style_edit_form(form) {\r\n");
      out.write("        \t\t\t// form.find('input[name=statusCn]').addClass('ace ace-switch ace-switch-5').after('<span class=\"lbl\"></span>');\r\n");
      out.write("        \t\t\t// don't wrap inside a label element, the checkbox value won't be submitted (POST'ed)\r\n");
      out.write("        \t\t\t// .addClass('ace ace-switch ace-switch-5').wrap('<label class=\"inline\" />').after('<span class=\"lbl\"></span>');\r\n");
      out.write("\r\n");
      out.write("        \t\t\t// update buttons classes\r\n");
      out.write("        \t\t\tvar buttons = form.next().find('.EditButton .fm-button');\r\n");
      out.write("        \t\t\tbuttons.addClass('btn btn-sm').find('[class*=\"-icon\"]').hide();// ui-icon, s-icon\r\n");
      out.write("        \t\t\tbuttons.eq(0).addClass('btn-primary').prepend('<i class=\"ace-icon fa fa-check\"></i>');\r\n");
      out.write("        \t\t\tbuttons.eq(1).prepend('<i class=\"ace-icon fa fa-times\"></i>')\r\n");
      out.write("\r\n");
      out.write("        \t\t\tbuttons = form.next().find('.navButton a');\r\n");
      out.write("        \t\t\tbuttons.find('.ui-icon').hide();\r\n");
      out.write("        \t\t\tbuttons.eq(0).append('<i class=\"ace-icon fa fa-chevron-left\"></i>');\r\n");
      out.write("        \t\t\tbuttons.eq(1).append('<i class=\"ace-icon fa fa-chevron-right\"></i>');\r\n");
      out.write("        \t\t}\r\n");
      out.write("\r\n");
      out.write("        \t\tfunction style_delete_form(form) {\r\n");
      out.write("        \t\t\tvar buttons = form.next().find('.EditButton .fm-button');\r\n");
      out.write("        \t\t\tbuttons.addClass('btn btn-sm btn-white btn-round').find('[class*=\"-icon\"]').hide();// ui-icon, s-icon\r\n");
      out.write("        \t\t\tbuttons.eq(0).addClass('btn-danger').prepend('<i class=\"ace-icon fa fa-trash-o\"></i>');\r\n");
      out.write("        \t\t\tbuttons.eq(1).addClass('btn-default').prepend('<i class=\"ace-icon fa fa-times\"></i>')\r\n");
      out.write("        \t\t}\r\n");
      out.write("\r\n");
      out.write("        \t\tfunction style_search_filters(form) {\r\n");
      out.write("        \t\t\tform.find('.delete-rule').val('X');\r\n");
      out.write("        \t\t\tform.find('.add-rule').addClass('btn btn-xs btn-primary');\r\n");
      out.write("        \t\t\tform.find('.add-group').addClass('btn btn-xs btn-success');\r\n");
      out.write("        \t\t\tform.find('.delete-group').addClass('btn btn-xs btn-danger');\r\n");
      out.write("        \t\t}\r\n");
      out.write("        \t\tfunction style_search_form(form) {\r\n");
      out.write("        \t\t\tvar dialog = form.closest('.ui-jqdialog');\r\n");
      out.write("        \t\t\tvar buttons = dialog.find('.EditTable')\r\n");
      out.write("        \t\t\tbuttons.find('.EditButton a[id*=\"_reset\"]').addClass('btn btn-sm btn-info').find('.ui-icon').attr('class', 'ace-icon fa fa-retweet');\r\n");
      out.write("        \t\t\tbuttons.find('.EditButton a[id*=\"_query\"]').addClass('btn btn-sm btn-inverse').find('.ui-icon').attr('class', 'ace-icon fa fa-comment-o');\r\n");
      out.write("        \t\t\tbuttons.find('.EditButton a[id*=\"_search\"]').addClass('btn btn-sm btn-purple').find('.ui-icon').attr('class', 'ace-icon fa fa-search');\r\n");
      out.write("        \t\t}\r\n");
      out.write("\r\n");
      out.write("        \t\tfunction beforeDeleteCallback(e) {\r\n");
      out.write("        \t\t\tvar form = $(e[0]);\r\n");
      out.write("        \t\t\tif (form.data('styled'))\r\n");
      out.write("        \t\t\t\treturn false;\r\n");
      out.write("        \t\t\tform.closest('.ui-jqdialog').find('.ui-jqdialog-titlebar').wrapInner('<div class=\"widget-header\" />')\r\n");
      out.write("        \t\t\tstyle_delete_form(form);\r\n");
      out.write("        \t\t\tform.data('styled', true);\r\n");
      out.write("        \t\t}\r\n");
      out.write("\r\n");
      out.write("        \t\tfunction beforeEditCallback(e) {\r\n");
      out.write("        \t\t\tvar form = $(e[0]);\r\n");
      out.write("        \t\t\tform.closest('.ui-jqdialog').find('.ui-jqdialog-titlebar').wrapInner('<div class=\"widget-header\" />')\r\n");
      out.write("        \t\t\tstyle_edit_form(form);\r\n");
      out.write("        \t\t}\r\n");
      out.write("\r\n");
      out.write("        \t\t// it causes some flicker when reloading or navigating grid\r\n");
      out.write("        \t\t// it may be possible to have some custom formatter to do this as the grid is being created to prevent this\r\n");
      out.write("        \t\t// or go back to default browser checkbox styles for the grid\r\n");
      out.write("        \t\tfunction styleCheckbox(table) {\r\n");
      out.write("        \t\t\t/**\r\n");
      out.write("        \t\t\t * $(table).find('input:checkbox').addClass('ace') .wrap('<label />') .after('<span class=\"lbl align-top\" />') $('.ui-jqgrid-labels th[id*=\"_cb\"]:first-child')\r\n");
      out.write("        \t\t\t * .find('input.cbox[type=checkbox]').addClass('ace') .wrap('<label />').after('<span class=\"lbl align-top\" />');\r\n");
      out.write("        \t\t\t */\r\n");
      out.write("        \t\t}\r\n");
      out.write("\r\n");
      out.write("        \t\t// unlike navButtons icons, action icons in rows seem to be hard-coded\r\n");
      out.write("        \t\t// you can change them like this in here if you want\r\n");
      out.write("        \t\tfunction updateActionIcons(table) {\r\n");
      out.write("        \t\t\t/**\r\n");
      out.write("        \t\t\t * var replacement = { 'ui-ace-icon fa fa-pencil' : 'ace-icon fa fa-pencil blue', 'ui-ace-icon fa fa-trash-o' : 'ace-icon fa fa-trash-o red', 'ui-icon-disk' : 'ace-icon fa fa-check green', 'ui-icon-cancel' :\r\n");
      out.write("        \t\t\t * 'ace-icon fa fa-times red' }; $(table).find('.ui-pg-div span.ui-icon').each(function(){ var icon = $(this); var $class = $.trim(icon.attr('class').replace('ui-icon', '')); if($class in replacement)\r\n");
      out.write("        \t\t\t * icon.attr('class', 'ui-icon '+replacement[$class]); })\r\n");
      out.write("        \t\t\t */\r\n");
      out.write("        \t\t}\r\n");
      out.write("\r\n");
      out.write("        \t\t// replace icons with FontAwesome icons like above\r\n");
      out.write("        \t\tfunction updatePagerIcons(table) {\r\n");
      out.write("        \t\t\tvar replacement = {\r\n");
      out.write("        \t\t\t\t'ui-icon-seek-first' : 'ace-icon fa fa-angle-double-left bigger-140',\r\n");
      out.write("        \t\t\t\t'ui-icon-seek-prev' : 'ace-icon fa fa-angle-left bigger-140',\r\n");
      out.write("        \t\t\t\t'ui-icon-seek-next' : 'ace-icon fa fa-angle-right bigger-140',\r\n");
      out.write("        \t\t\t\t'ui-icon-seek-end' : 'ace-icon fa fa-angle-double-right bigger-140'\r\n");
      out.write("        \t\t\t};\r\n");
      out.write("        \t\t\t$('.ui-pg-table:not(.navtable) > tbody > tr > .ui-pg-button > .ui-icon').each(function() {\r\n");
      out.write("        \t\t\t\tvar icon = $(this);\r\n");
      out.write("        \t\t\t\tvar $class = $.trim(icon.attr('class').replace('ui-icon', ''));\r\n");
      out.write("\r\n");
      out.write("        \t\t\t\tif ($class in replacement)\r\n");
      out.write("        \t\t\t\t\ticon.attr('class', 'ui-icon ' + replacement[$class]);\r\n");
      out.write("        \t\t\t})\r\n");
      out.write("        \t\t}\r\n");
      out.write("\r\n");
      out.write("        \t\tfunction enableTooltips(table) {\r\n");
      out.write("        \t\t\t$('.navtable .ui-pg-button').tooltip({\r\n");
      out.write("        \t\t\t\tcontainer : 'body'\r\n");
      out.write("        \t\t\t});\r\n");
      out.write("        \t\t\t$(table).find('.ui-pg-div').tooltip({\r\n");
      out.write("        \t\t\t\tcontainer : 'body'\r\n");
      out.write("        \t\t\t});\r\n");
      out.write("        \t\t}\r\n");
      out.write("\r\n");
      out.write("        \t\t// var selr = jQuery(grid_selector).jqGrid('getGridParam','selrow');\r\n");
      out.write("\r\n");
      out.write("        \t\t$(document).one('ajaxloadstart.page', function(e) {\r\n");
      out.write("        \t\t\t$(grid_selector).jqGrid('GridUnload');\r\n");
      out.write("        \t\t\t$('.ui-jqdialog').remove();\r\n");
      out.write("        \t\t});\r\n");
      out.write("        \t\t\r\n");
      out.write("        \t});\r\n");
      out.write("        });\r\n");
      out.write("</script>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fset_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:set
    org.apache.taglibs.standard.tag.rt.core.SetTag _jspx_th_c_005fset_005f0 = (org.apache.taglibs.standard.tag.rt.core.SetTag) _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.SetTag.class);
    boolean _jspx_th_c_005fset_005f0_reused = false;
    try {
      _jspx_th_c_005fset_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fset_005f0.setParent(null);
      // /WEB-INF/page/back/systemmanage/role.jsp(4,0) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setVar("contextPath");
      // /WEB-INF/page/back/systemmanage/role.jsp(4,0) name = value type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setValue(new org.apache.jasper.el.JspValueExpression("/WEB-INF/page/back/systemmanage/role.jsp(4,0) '${pageContext.request.contextPath}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${pageContext.request.contextPath}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      int _jspx_eval_c_005fset_005f0 = _jspx_th_c_005fset_005f0.doStartTag();
      if (_jspx_th_c_005fset_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_c_005fset_005f0);
      _jspx_th_c_005fset_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fset_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fset_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_shiro_005fhasPermission_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  shiro:hasPermission
    org.apache.shiro.web.tags.HasPermissionTag _jspx_th_shiro_005fhasPermission_005f0 = (org.apache.shiro.web.tags.HasPermissionTag) _005fjspx_005ftagPool_005fshiro_005fhasPermission_0026_005fname.get(org.apache.shiro.web.tags.HasPermissionTag.class);
    boolean _jspx_th_shiro_005fhasPermission_005f0_reused = false;
    try {
      _jspx_th_shiro_005fhasPermission_005f0.setPageContext(_jspx_page_context);
      _jspx_th_shiro_005fhasPermission_005f0.setParent(null);
      // /WEB-INF/page/back/systemmanage/role.jsp(294,18) name = name type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_shiro_005fhasPermission_005f0.setName((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ROLE_KEY}:role:edit", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      int _jspx_eval_shiro_005fhasPermission_005f0 = _jspx_th_shiro_005fhasPermission_005f0.doStartTag();
      if (_jspx_eval_shiro_005fhasPermission_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("true");
          int evalDoAfterBody = _jspx_th_shiro_005fhasPermission_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_shiro_005fhasPermission_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fshiro_005fhasPermission_0026_005fname.reuse(_jspx_th_shiro_005fhasPermission_005f0);
      _jspx_th_shiro_005fhasPermission_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_shiro_005fhasPermission_005f0, _jsp_getInstanceManager(), _jspx_th_shiro_005fhasPermission_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_shiro_005flacksPermission_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  shiro:lacksPermission
    org.apache.shiro.web.tags.LacksPermissionTag _jspx_th_shiro_005flacksPermission_005f0 = (org.apache.shiro.web.tags.LacksPermissionTag) _005fjspx_005ftagPool_005fshiro_005flacksPermission_0026_005fname.get(org.apache.shiro.web.tags.LacksPermissionTag.class);
    boolean _jspx_th_shiro_005flacksPermission_005f0_reused = false;
    try {
      _jspx_th_shiro_005flacksPermission_005f0.setPageContext(_jspx_page_context);
      _jspx_th_shiro_005flacksPermission_005f0.setParent(null);
      // /WEB-INF/page/back/systemmanage/role.jsp(294,94) name = name type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_shiro_005flacksPermission_005f0.setName((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ROLE_KEY}:role:edit", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      int _jspx_eval_shiro_005flacksPermission_005f0 = _jspx_th_shiro_005flacksPermission_005f0.doStartTag();
      if (_jspx_eval_shiro_005flacksPermission_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("false");
          int evalDoAfterBody = _jspx_th_shiro_005flacksPermission_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_shiro_005flacksPermission_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fshiro_005flacksPermission_0026_005fname.reuse(_jspx_th_shiro_005flacksPermission_005f0);
      _jspx_th_shiro_005flacksPermission_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_shiro_005flacksPermission_005f0, _jsp_getInstanceManager(), _jspx_th_shiro_005flacksPermission_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_shiro_005fhasPermission_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  shiro:hasPermission
    org.apache.shiro.web.tags.HasPermissionTag _jspx_th_shiro_005fhasPermission_005f1 = (org.apache.shiro.web.tags.HasPermissionTag) _005fjspx_005ftagPool_005fshiro_005fhasPermission_0026_005fname.get(org.apache.shiro.web.tags.HasPermissionTag.class);
    boolean _jspx_th_shiro_005fhasPermission_005f1_reused = false;
    try {
      _jspx_th_shiro_005fhasPermission_005f1.setPageContext(_jspx_page_context);
      _jspx_th_shiro_005fhasPermission_005f1.setParent(null);
      // /WEB-INF/page/back/systemmanage/role.jsp(296,17) name = name type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_shiro_005fhasPermission_005f1.setName((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ROLE_KEY}:role:add", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      int _jspx_eval_shiro_005fhasPermission_005f1 = _jspx_th_shiro_005fhasPermission_005f1.doStartTag();
      if (_jspx_eval_shiro_005fhasPermission_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("true");
          int evalDoAfterBody = _jspx_th_shiro_005fhasPermission_005f1.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_shiro_005fhasPermission_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fshiro_005fhasPermission_0026_005fname.reuse(_jspx_th_shiro_005fhasPermission_005f1);
      _jspx_th_shiro_005fhasPermission_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_shiro_005fhasPermission_005f1, _jsp_getInstanceManager(), _jspx_th_shiro_005fhasPermission_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_shiro_005flacksPermission_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  shiro:lacksPermission
    org.apache.shiro.web.tags.LacksPermissionTag _jspx_th_shiro_005flacksPermission_005f1 = (org.apache.shiro.web.tags.LacksPermissionTag) _005fjspx_005ftagPool_005fshiro_005flacksPermission_0026_005fname.get(org.apache.shiro.web.tags.LacksPermissionTag.class);
    boolean _jspx_th_shiro_005flacksPermission_005f1_reused = false;
    try {
      _jspx_th_shiro_005flacksPermission_005f1.setPageContext(_jspx_page_context);
      _jspx_th_shiro_005flacksPermission_005f1.setParent(null);
      // /WEB-INF/page/back/systemmanage/role.jsp(296,92) name = name type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_shiro_005flacksPermission_005f1.setName((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ROLE_KEY}:role:add", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      int _jspx_eval_shiro_005flacksPermission_005f1 = _jspx_th_shiro_005flacksPermission_005f1.doStartTag();
      if (_jspx_eval_shiro_005flacksPermission_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("false");
          int evalDoAfterBody = _jspx_th_shiro_005flacksPermission_005f1.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_shiro_005flacksPermission_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fshiro_005flacksPermission_0026_005fname.reuse(_jspx_th_shiro_005flacksPermission_005f1);
      _jspx_th_shiro_005flacksPermission_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_shiro_005flacksPermission_005f1, _jsp_getInstanceManager(), _jspx_th_shiro_005flacksPermission_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_shiro_005fhasPermission_005f2(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  shiro:hasPermission
    org.apache.shiro.web.tags.HasPermissionTag _jspx_th_shiro_005fhasPermission_005f2 = (org.apache.shiro.web.tags.HasPermissionTag) _005fjspx_005ftagPool_005fshiro_005fhasPermission_0026_005fname.get(org.apache.shiro.web.tags.HasPermissionTag.class);
    boolean _jspx_th_shiro_005fhasPermission_005f2_reused = false;
    try {
      _jspx_th_shiro_005fhasPermission_005f2.setPageContext(_jspx_page_context);
      _jspx_th_shiro_005fhasPermission_005f2.setParent(null);
      // /WEB-INF/page/back/systemmanage/role.jsp(298,17) name = name type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_shiro_005fhasPermission_005f2.setName((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ROLE_KEY}:role:delete", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      int _jspx_eval_shiro_005fhasPermission_005f2 = _jspx_th_shiro_005fhasPermission_005f2.doStartTag();
      if (_jspx_eval_shiro_005fhasPermission_005f2 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("true");
          int evalDoAfterBody = _jspx_th_shiro_005fhasPermission_005f2.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_shiro_005fhasPermission_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fshiro_005fhasPermission_0026_005fname.reuse(_jspx_th_shiro_005fhasPermission_005f2);
      _jspx_th_shiro_005fhasPermission_005f2_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_shiro_005fhasPermission_005f2, _jsp_getInstanceManager(), _jspx_th_shiro_005fhasPermission_005f2_reused);
    }
    return false;
  }

  private boolean _jspx_meth_shiro_005flacksPermission_005f2(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  shiro:lacksPermission
    org.apache.shiro.web.tags.LacksPermissionTag _jspx_th_shiro_005flacksPermission_005f2 = (org.apache.shiro.web.tags.LacksPermissionTag) _005fjspx_005ftagPool_005fshiro_005flacksPermission_0026_005fname.get(org.apache.shiro.web.tags.LacksPermissionTag.class);
    boolean _jspx_th_shiro_005flacksPermission_005f2_reused = false;
    try {
      _jspx_th_shiro_005flacksPermission_005f2.setPageContext(_jspx_page_context);
      _jspx_th_shiro_005flacksPermission_005f2.setParent(null);
      // /WEB-INF/page/back/systemmanage/role.jsp(298,95) name = name type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_shiro_005flacksPermission_005f2.setName((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ROLE_KEY}:role:delete", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      int _jspx_eval_shiro_005flacksPermission_005f2 = _jspx_th_shiro_005flacksPermission_005f2.doStartTag();
      if (_jspx_eval_shiro_005flacksPermission_005f2 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("false");
          int evalDoAfterBody = _jspx_th_shiro_005flacksPermission_005f2.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_shiro_005flacksPermission_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fshiro_005flacksPermission_0026_005fname.reuse(_jspx_th_shiro_005flacksPermission_005f2);
      _jspx_th_shiro_005flacksPermission_005f2_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_shiro_005flacksPermission_005f2, _jsp_getInstanceManager(), _jspx_th_shiro_005flacksPermission_005f2_reused);
    }
    return false;
  }

  private boolean _jspx_meth_shiro_005fhasPermission_005f3(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  shiro:hasPermission
    org.apache.shiro.web.tags.HasPermissionTag _jspx_th_shiro_005fhasPermission_005f3 = (org.apache.shiro.web.tags.HasPermissionTag) _005fjspx_005ftagPool_005fshiro_005fhasPermission_0026_005fname.get(org.apache.shiro.web.tags.HasPermissionTag.class);
    boolean _jspx_th_shiro_005fhasPermission_005f3_reused = false;
    try {
      _jspx_th_shiro_005fhasPermission_005f3.setPageContext(_jspx_page_context);
      _jspx_th_shiro_005fhasPermission_005f3.setParent(null);
      // /WEB-INF/page/back/systemmanage/role.jsp(300,20) name = name type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_shiro_005fhasPermission_005f3.setName((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ROLE_KEY}:role:search", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      int _jspx_eval_shiro_005fhasPermission_005f3 = _jspx_th_shiro_005fhasPermission_005f3.doStartTag();
      if (_jspx_eval_shiro_005fhasPermission_005f3 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("true");
          int evalDoAfterBody = _jspx_th_shiro_005fhasPermission_005f3.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_shiro_005fhasPermission_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fshiro_005fhasPermission_0026_005fname.reuse(_jspx_th_shiro_005fhasPermission_005f3);
      _jspx_th_shiro_005fhasPermission_005f3_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_shiro_005fhasPermission_005f3, _jsp_getInstanceManager(), _jspx_th_shiro_005fhasPermission_005f3_reused);
    }
    return false;
  }

  private boolean _jspx_meth_shiro_005flacksPermission_005f3(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  shiro:lacksPermission
    org.apache.shiro.web.tags.LacksPermissionTag _jspx_th_shiro_005flacksPermission_005f3 = (org.apache.shiro.web.tags.LacksPermissionTag) _005fjspx_005ftagPool_005fshiro_005flacksPermission_0026_005fname.get(org.apache.shiro.web.tags.LacksPermissionTag.class);
    boolean _jspx_th_shiro_005flacksPermission_005f3_reused = false;
    try {
      _jspx_th_shiro_005flacksPermission_005f3.setPageContext(_jspx_page_context);
      _jspx_th_shiro_005flacksPermission_005f3.setParent(null);
      // /WEB-INF/page/back/systemmanage/role.jsp(300,98) name = name type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_shiro_005flacksPermission_005f3.setName((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ROLE_KEY}:role:search", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      int _jspx_eval_shiro_005flacksPermission_005f3 = _jspx_th_shiro_005flacksPermission_005f3.doStartTag();
      if (_jspx_eval_shiro_005flacksPermission_005f3 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("false");
          int evalDoAfterBody = _jspx_th_shiro_005flacksPermission_005f3.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_shiro_005flacksPermission_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fshiro_005flacksPermission_0026_005fname.reuse(_jspx_th_shiro_005flacksPermission_005f3);
      _jspx_th_shiro_005flacksPermission_005f3_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_shiro_005flacksPermission_005f3, _jsp_getInstanceManager(), _jspx_th_shiro_005flacksPermission_005f3_reused);
    }
    return false;
  }

  private boolean _jspx_meth_shiro_005fhasPermission_005f4(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  shiro:hasPermission
    org.apache.shiro.web.tags.HasPermissionTag _jspx_th_shiro_005fhasPermission_005f4 = (org.apache.shiro.web.tags.HasPermissionTag) _005fjspx_005ftagPool_005fshiro_005fhasPermission_0026_005fname.get(org.apache.shiro.web.tags.HasPermissionTag.class);
    boolean _jspx_th_shiro_005fhasPermission_005f4_reused = false;
    try {
      _jspx_th_shiro_005fhasPermission_005f4.setPageContext(_jspx_page_context);
      _jspx_th_shiro_005fhasPermission_005f4.setParent(null);
      // /WEB-INF/page/back/systemmanage/role.jsp(304,18) name = name type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_shiro_005fhasPermission_005f4.setName((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ROLE_KEY}:role:view", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      int _jspx_eval_shiro_005fhasPermission_005f4 = _jspx_th_shiro_005fhasPermission_005f4.doStartTag();
      if (_jspx_eval_shiro_005fhasPermission_005f4 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("true");
          int evalDoAfterBody = _jspx_th_shiro_005fhasPermission_005f4.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_shiro_005fhasPermission_005f4.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fshiro_005fhasPermission_0026_005fname.reuse(_jspx_th_shiro_005fhasPermission_005f4);
      _jspx_th_shiro_005fhasPermission_005f4_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_shiro_005fhasPermission_005f4, _jsp_getInstanceManager(), _jspx_th_shiro_005fhasPermission_005f4_reused);
    }
    return false;
  }

  private boolean _jspx_meth_shiro_005flacksPermission_005f4(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  shiro:lacksPermission
    org.apache.shiro.web.tags.LacksPermissionTag _jspx_th_shiro_005flacksPermission_005f4 = (org.apache.shiro.web.tags.LacksPermissionTag) _005fjspx_005ftagPool_005fshiro_005flacksPermission_0026_005fname.get(org.apache.shiro.web.tags.LacksPermissionTag.class);
    boolean _jspx_th_shiro_005flacksPermission_005f4_reused = false;
    try {
      _jspx_th_shiro_005flacksPermission_005f4.setPageContext(_jspx_page_context);
      _jspx_th_shiro_005flacksPermission_005f4.setParent(null);
      // /WEB-INF/page/back/systemmanage/role.jsp(304,94) name = name type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_shiro_005flacksPermission_005f4.setName((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ROLE_KEY}:role:view", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      int _jspx_eval_shiro_005flacksPermission_005f4 = _jspx_th_shiro_005flacksPermission_005f4.doStartTag();
      if (_jspx_eval_shiro_005flacksPermission_005f4 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("false");
          int evalDoAfterBody = _jspx_th_shiro_005flacksPermission_005f4.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_shiro_005flacksPermission_005f4.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fshiro_005flacksPermission_0026_005fname.reuse(_jspx_th_shiro_005flacksPermission_005f4);
      _jspx_th_shiro_005flacksPermission_005f4_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_shiro_005flacksPermission_005f4, _jsp_getInstanceManager(), _jspx_th_shiro_005flacksPermission_005f4_reused);
    }
    return false;
  }

  private boolean _jspx_meth_shiro_005fhasPermission_005f5(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  shiro:hasPermission
    org.apache.shiro.web.tags.HasPermissionTag _jspx_th_shiro_005fhasPermission_005f5 = (org.apache.shiro.web.tags.HasPermissionTag) _005fjspx_005ftagPool_005fshiro_005fhasPermission_0026_005fname.get(org.apache.shiro.web.tags.HasPermissionTag.class);
    boolean _jspx_th_shiro_005fhasPermission_005f5_reused = false;
    try {
      _jspx_th_shiro_005fhasPermission_005f5.setPageContext(_jspx_page_context);
      _jspx_th_shiro_005fhasPermission_005f5.setParent(null);
      // /WEB-INF/page/back/systemmanage/role.jsp(374,13) name = name type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_shiro_005fhasPermission_005f5.setName((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ROLE_KEY}:role:export", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      int _jspx_eval_shiro_005fhasPermission_005f5 = _jspx_th_shiro_005fhasPermission_005f5.doStartTag();
      if (_jspx_eval_shiro_005fhasPermission_005f5 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("true");
          int evalDoAfterBody = _jspx_th_shiro_005fhasPermission_005f5.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_shiro_005fhasPermission_005f5.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fshiro_005fhasPermission_0026_005fname.reuse(_jspx_th_shiro_005fhasPermission_005f5);
      _jspx_th_shiro_005fhasPermission_005f5_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_shiro_005fhasPermission_005f5, _jsp_getInstanceManager(), _jspx_th_shiro_005fhasPermission_005f5_reused);
    }
    return false;
  }

  private boolean _jspx_meth_shiro_005flacksPermission_005f5(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  shiro:lacksPermission
    org.apache.shiro.web.tags.LacksPermissionTag _jspx_th_shiro_005flacksPermission_005f5 = (org.apache.shiro.web.tags.LacksPermissionTag) _005fjspx_005ftagPool_005fshiro_005flacksPermission_0026_005fname.get(org.apache.shiro.web.tags.LacksPermissionTag.class);
    boolean _jspx_th_shiro_005flacksPermission_005f5_reused = false;
    try {
      _jspx_th_shiro_005flacksPermission_005f5.setPageContext(_jspx_page_context);
      _jspx_th_shiro_005flacksPermission_005f5.setParent(null);
      // /WEB-INF/page/back/systemmanage/role.jsp(374,91) name = name type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_shiro_005flacksPermission_005f5.setName((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ROLE_KEY}:role:export", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      int _jspx_eval_shiro_005flacksPermission_005f5 = _jspx_th_shiro_005flacksPermission_005f5.doStartTag();
      if (_jspx_eval_shiro_005flacksPermission_005f5 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("false");
          int evalDoAfterBody = _jspx_th_shiro_005flacksPermission_005f5.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_shiro_005flacksPermission_005f5.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fshiro_005flacksPermission_0026_005fname.reuse(_jspx_th_shiro_005flacksPermission_005f5);
      _jspx_th_shiro_005flacksPermission_005f5_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_shiro_005flacksPermission_005f5, _jsp_getInstanceManager(), _jspx_th_shiro_005flacksPermission_005f5_reused);
    }
    return false;
  }
}
